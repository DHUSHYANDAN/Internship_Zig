{"ast":null,"code":"var _jsxFileName = \"O:\\\\dhushport\\\\Internship_Zig\\\\frontend\\\\src\\\\components\\\\protectedRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport axios from \"axios\";\nimport baseUrl from \"../URL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await axios.get(\"http://localhost:5000/profile\", {\n          withCredentials: true\n        }); // ðŸ”¥ Fix: Check token with API\n        setIsAuthenticated(true);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (isAuthenticated === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 42\n  }, this);\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/signin\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 43\n  }, this);\n};\n_s(ProtectedRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","axios","baseUrl","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","setIsAuthenticated","checkAuth","get","withCredentials","error","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["O:/dhushport/Internship_Zig/frontend/src/components/protectedRoutes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../URL\";\r\n\r\n\r\nconst ProtectedRoute = () => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            try {\r\n                await axios.get(\"http://localhost:5000/profile\", { withCredentials: true }); // ðŸ”¥ Fix: Check token with API\r\n                setIsAuthenticated(true);\r\n            } catch (error) {\r\n                setIsAuthenticated(false);\r\n            }\r\n        };\r\n        checkAuth();\r\n    }, []);\r\n\r\n    if (isAuthenticated === null) return <div>Loading...</div>;\r\n\r\n    return isAuthenticated ? <Outlet /> : <Navigate to=\"/signin\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMR,KAAK,CAACS,GAAG,CAAC,+BAA+B,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC,CAAC,CAAC;QAC7EH,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZJ,kBAAkB,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE,oBAAOH,OAAA;IAAAS,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1D,OAAOV,eAAe,gBAAGH,OAAA,CAACJ,MAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,QAAQ;IAACmB,EAAE,EAAC,SAAS;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACX,EAAA,CAlBID,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}